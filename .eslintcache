[{"/home/septian/ReactJS/Final-Task/client/src/index.js":"1","/home/septian/ReactJS/Final-Task/client/src/reportWebVitals.js":"2","/home/septian/ReactJS/Final-Task/client/src/pages/App.js":"3","/home/septian/ReactJS/Final-Task/client/src/config/index.js":"4","/home/septian/ReactJS/Final-Task/client/src/config/routes/index.js":"5","/home/septian/ReactJS/Final-Task/client/src/pages/index.js":"6","/home/septian/ReactJS/Final-Task/client/src/pages/landingPage/index.js":"7","/home/septian/ReactJS/Final-Task/client/src/config/privateRoute/index.js":"8","/home/septian/ReactJS/Final-Task/client/src/context/appContext.js":"9","/home/septian/ReactJS/Final-Task/client/src/config/api.js":"10","/home/septian/ReactJS/Final-Task/client/src/pages/Home/index.js":"11","/home/septian/ReactJS/Final-Task/client/src/pages/Logout/index.js":"12","/home/septian/ReactJS/Final-Task/client/src/components/index.js":"13","/home/septian/ReactJS/Final-Task/client/src/components/Header/index.js":"14","/home/septian/ReactJS/Final-Task/client/src/assets/index.js":"15","/home/septian/ReactJS/Final-Task/client/src/pages/PostDetail/index.js":"16","/home/septian/ReactJS/Final-Task/client/src/pages/Hiring/index.js":"17","/home/septian/ReactJS/Final-Task/client/src/pages/MyOrder/index.js":"18","/home/septian/ReactJS/Final-Task/client/src/pages/MyOffer/index.js":"19","/home/septian/ReactJS/Final-Task/client/src/components/ActionOrder/index.js":"20","/home/septian/ReactJS/Final-Task/client/src/components/Atoms/index.js":"21","/home/septian/ReactJS/Final-Task/client/src/components/Atoms/ProfileMenu/index.js":"22","/home/septian/ReactJS/Final-Task/client/src/components/Atoms/OrderAction/index.js":"23","/home/septian/ReactJS/Final-Task/client/src/components/ActionOffer/index.js":"24","/home/septian/ReactJS/Final-Task/client/src/pages/Profile/index.js":"25","/home/septian/ReactJS/Final-Task/client/src/pages/User/index.js":"26","/home/septian/ReactJS/Final-Task/client/src/pages/AddPost/index.js":"27","/home/septian/ReactJS/Final-Task/client/src/pages/EditProfile/index.js":"28","/home/septian/ReactJS/Final-Task/client/src/pages/SendProject/index.js":"29","/home/septian/ReactJS/Final-Task/client/src/pages/ViewProject/index.js":"30","/home/septian/ReactJS/Final-Task/client/src/pages/Home/postsbyfollow.js":"31"},{"size":616,"mtime":1607990472682,"results":"32","hashOfConfig":"33"},{"size":362,"mtime":1607988021148,"results":"34","hashOfConfig":"33"},{"size":151,"mtime":1607989664026,"results":"35","hashOfConfig":"33"},{"size":48,"mtime":1607989439328,"results":"36","hashOfConfig":"33"},{"size":2247,"mtime":1608507882841,"results":"37","hashOfConfig":"33"},{"size":713,"mtime":1608507864224,"results":"38","hashOfConfig":"33"},{"size":8589,"mtime":1608173706779,"results":"39","hashOfConfig":"33"},{"size":578,"mtime":1607998998451,"results":"40","hashOfConfig":"33"},{"size":2278,"mtime":1608595537219,"results":"41","hashOfConfig":"33"},{"size":390,"mtime":1610320721894,"results":"42","hashOfConfig":"33"},{"size":3656,"mtime":1608520346696,"results":"43","hashOfConfig":"33"},{"size":533,"mtime":1608208849055,"results":"44","hashOfConfig":"33"},{"size":156,"mtime":1608178756422,"results":"45","hashOfConfig":"33"},{"size":573,"mtime":1608083466357,"results":"46","hashOfConfig":"33"},{"size":1354,"mtime":1608513470945,"results":"47","hashOfConfig":"33"},{"size":5491,"mtime":1608521593013,"results":"48","hashOfConfig":"33"},{"size":6357,"mtime":1608600002157,"results":"49","hashOfConfig":"33"},{"size":3622,"mtime":1608600475798,"results":"50","hashOfConfig":"33"},{"size":2765,"mtime":1608593722178,"results":"51","hashOfConfig":"33"},{"size":2803,"mtime":1608600491331,"results":"52","hashOfConfig":"33"},{"size":134,"mtime":1608175632941,"results":"53","hashOfConfig":"33"},{"size":3021,"mtime":1608514473861,"results":"54","hashOfConfig":"33"},{"size":2616,"mtime":1608346342425,"results":"55","hashOfConfig":"33"},{"size":2554,"mtime":1608601791225,"results":"56","hashOfConfig":"33"},{"size":3567,"mtime":1608515071903,"results":"57","hashOfConfig":"33"},{"size":4943,"mtime":1608522971825,"results":"58","hashOfConfig":"33"},{"size":8588,"mtime":1608599360223,"results":"59","hashOfConfig":"33"},{"size":7049,"mtime":1608601179385,"results":"60","hashOfConfig":"33"},{"size":8013,"mtime":1608598231012,"results":"61","hashOfConfig":"33"},{"size":3207,"mtime":1608479042356,"results":"62","hashOfConfig":"33"},{"size":2392,"mtime":1608511688071,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"ywvlsy",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"66"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"66"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"66"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"66"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"66"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"66"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"66"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"66"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"66"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"66"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"66"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"66"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"66"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"66"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"66"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"66"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"66"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"66"},"/home/septian/ReactJS/Final-Task/client/src/index.js",[],["146","147"],"/home/septian/ReactJS/Final-Task/client/src/reportWebVitals.js",[],"/home/septian/ReactJS/Final-Task/client/src/pages/App.js",[],"/home/septian/ReactJS/Final-Task/client/src/config/index.js",[],"/home/septian/ReactJS/Final-Task/client/src/config/routes/index.js",["148","149"],"import { BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport PrivateRoute from '../privateRoute';\nimport { \n    LandingPage, \n    Home, \n    Logout, \n    PostDetail, \n    Hiring, \n    MyOrder, MyOffer, Profile, \n    User, AddPost, EditProfile, \n    SendProject, ViewProject, PostsByFollow} from '../../pages';\nimport {useEffect, useContext } from 'react';\nimport {API, setAuthToken} from \"../../config/api\";\nimport { AppContext } from '../../context/appContext';\n\nif (localStorage.token) {\n    setAuthToken(localStorage.token);\n}\n\nconst Routes = () => {\n    const [state,dispatch] = useContext(AppContext);\n\n    const loadUser = async () => {\n        try {\n        const response = await API(\"/check-auth\");\n        if(response.status === 401){\n            return dispatch({\n            type: \"AUTH_ERROR\",\n            });\n        }\n        dispatch({\n            type: \"USER_LOADED\",\n            payload: response.data.data, \n        });\n        } catch (error) {\n        dispatch({\n            type: \"AUTH_ERROR\",\n        });\n        }\n    };\n    useEffect(() => {\n        loadUser();\n    }, []);\n\n    return (\n        <Router>\n            <Switch>\n                <Route exact path=\"/landing-page\" component={LandingPage}></Route>\n                <PrivateRoute path=\"/post-detail/:id\" component={PostDetail}/>\n                <PrivateRoute path=\"/hiring/:id\" component={Hiring}/>\n                <PrivateRoute path=\"/myorder\" component={MyOrder}/>\n                <PrivateRoute path=\"/myoffer\" component={MyOffer}/>\n                <PrivateRoute path=\"/profile\" component={Profile}/>\n                <PrivateRoute path=\"/send/:id\" component={SendProject}/>\n                <PrivateRoute path=\"/viewproject/:id\" component={ViewProject}/>\n                <PrivateRoute path=\"/edit-profile\" component={EditProfile}/>\n                <PrivateRoute path=\"/user/:id\" component={User}/>\n                <PrivateRoute path=\"/add-post\" component={AddPost}/>\n                <PrivateRoute path=\"/logout\" component={Logout}/>\n                <PrivateRoute path=\"/postsbyfollow\" component={PostsByFollow}/>\n                <PrivateRoute path=\"/\" component={Home}/>\n            </Switch>\n        </Router>\n    )\n}\n\nexport default Routes\n","/home/septian/ReactJS/Final-Task/client/src/pages/index.js",[],"/home/septian/ReactJS/Final-Task/client/src/pages/landingPage/index.js",["150","151","152","153","154","155","156","157","158","159"],"import React, {useState, useContext} from 'react';\nimport {AppContext} from \"../../context/appContext\";\nimport {API, setAuthToken} from '../../config/api';\nimport { useHistory} from 'react-router-dom';\nimport {Button, Modal} from 'react-bootstrap';\nimport {LandingPageImage, LandingPageLogo, LandingPageDecorTop, LandingPageDecorBottomLeft, LandingPageDecorBottomRight} from '../../assets'\nimport './landingpage.scss';\n\nconst LandingPage = () => {\n    const [state, dispatch] = useContext(AppContext);\n    const [registerSuccessShow, setRegisterSuccessShow] = React.useState(false);\n    //Modal Static Login\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    //Modal Static Register\n    const [showRegister, setShowRegister] = useState(false);\n    const handleCloseRegister = () => setShowRegister(false);\n    const handleShowRegister = () => setShowRegister(true);\n    const router = useHistory();\n\n    const [formDataLogin, setFormDataLogin ] = useState({\n      email: \"\",\n      password: \"\",\n    });\n    const { email, password } = formDataLogin;\n\n    const [formDataRegister, setFormDataRegister ] = useState({\n      emailregister: \"\",\n      fullname : \"\",\n      passwordregister: \"\",\n    });\n    const { emailregister, fullname, passwordregister } = formDataRegister;\n    \n    function RegisterSuccess(props) {\n      return (\n        <Modal\n          {...props}\n          size=\"lg\"\n          aria-labelledby=\"contained-modal-title-vcenter\"\n          centered\n        >\n          <Modal.Body className=\"make-payment\">\n         \n          <p>\n              Congratulations your account has been registered. Click here to Login !\n          </p>\n         \n          </Modal.Body>\n        </Modal>\n      );\n    };\n\n    const showRegisterCloseLogin = () => {\n      setShow(false);\n      setShowRegister(true);\n    }\n    const showLoginCloseRegister = () => {\n      setShowRegister(false);\n      setShow(true);\n    }\n\n    const handleChangeLogin = (e) => {\n      setFormDataLogin({...formDataLogin, [e.target.name] : e.target.value });\n      console.log(formDataLogin);\n    };\n\n    const handleChangeRegister = (e) => {\n      setFormDataRegister({...formDataRegister, [e.target.name] : e.target.value });\n      console.log(formDataRegister);\n    };\n\n    const handleLogin = async (e) => {\n      e.preventDefault();\n      try {\n          const body = JSON.stringify({email,password});\n          const config = {\n              headers: {\n                  \"Content-Type\":\"application/json\",\n              },\n          }; \n          const response = await API.post(\"/login\", body, config);\n          dispatch({\n              type: \"LOGIN\",\n              payload: response.data.data.channel,\n          });\n          setAuthToken(response.data.data.channel.token);\n          const userId = response.data.data.channel.id;\n          router.push(\"/\");\n      } catch (error) {\n          console.log(error);\n      }\n    };\n\n    const handleRegister = async (e) => {\n      e.preventDefault();\n      try {\n          const body = JSON.stringify({emailregister,passwordregister,fullname});\n          const config = {\n              headers: {\n                  \"Content-Type\":\"application/json\",\n              },\n          }; \n          const response = await API.post(\"/register\", body, config);\n          setRegisterSuccessShow(true);\n      } catch (error) {\n          if(error.response.status === 401){\n              console.log(error)\n          }\n          else if(error.response.status === 400){\n              console.log(error)\n          }\n      }\n  };\n    \n\n    return (\n      <>\n      <div className=\"container\">\n      <div className=\"authentication\">\n          <div className=\"main-page\">\n              <div className=\"left col-6\">\n                <div className=\"row\">\n                  <img src={LandingPageLogo} className=\"landing-page-logo\"></img>\n                </div>\n                <div className=\"row mt-4\">\n                  <h2>Show your work to inspire everyone</h2>\n                  <p>Ways Exhibition is a website design creators gather to share their work with other creators</p>\n                  <Button onClick={handleShowRegister} className=\"btn-register\">Join Now</Button>\n                  <Button onClick={handleShow} className=\"btn-login\">Login</Button>\n                  \n                </div>\n\n              </div>\n              <div className=\"right col-6\">\n                  <img src={LandingPageImage} className=\"landingpage-image\"></img>\n              </div>\n          </div>\n      </div>\n    </div>\n      <div className=\"landing-page-decor-top\"><img src={LandingPageDecorTop}></img></div>\n      <div className=\"landing-page-decor-bottom-left\"><img src={LandingPageDecorBottomLeft}></img></div>\n      <div className=\"landing-page-decor-bottom-right\"><img src={LandingPageDecorBottomRight}></img></div>\n\n      <Modal show={show} onHide={handleClose} aria-labelledby=\"contained-modal-title-vcenter\"\n          centered>\n                <Modal.Header closeButton>\n                  <Modal.Title>Login</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <form onSubmit={(e) => handleLogin(e)}>\n                      <div className=\"form-group\">\n                          <input \n                            name=\"email\" \n                            className=\"form-control\" \n                            placeholder=\"Email\" \n                            onChange={(e) => handleChangeLogin(e)}\n                            value={email}\n                          ></input>\n                      </div>\n                      <div className=\"form-group\">\n                          <input \n                            name=\"password\" \n                            type=\"password\" \n                            className=\"form-control\" \n                            placeholder=\"Password\" \n                            onChange={(e) => handleChangeLogin(e)}\n                            value={password}\n                          ></input>\n                      </div>\n                      <div className=\"form-group\">\n                          <Button type=\"submit\" className=\"form-control btn-modal-register\">Login</Button>\n                      </div>\n                    </form>\n                    <div className=\"d-flex justify-content-center\">Don't have an account ? Klik <a onClick={()=>showRegisterCloseLogin()}  className=\"modal-link\">Here</a></div>\n                </Modal.Body>\n              </Modal>\n              <Modal show={showRegister} onHide={handleCloseRegister} aria-labelledby=\"contained-modal-title-vcenter\"\n          centered>\n                <Modal.Header closeButton>\n                  <Modal.Title>Register</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                <form onSubmit={(e) => handleRegister(e)}>\n                <div className=\"form-group\">\n                <input \n                  name=\"emailregister\" \n                  className=\"form-control\" \n                  placeholder=\"Email\"\n                  onChange={(e) => handleChangeRegister(e)}\n                  value={emailregister}></input>\n                </div>\n                <div className=\"form-group\">\n                    <input \n                      name=\"passwordregister\" \n                      type=\"password\" \n                      className=\"form-control\" \n                      placeholder=\"Password\"\n                      value={passwordregister}\n                      onChange={(e) => handleChangeRegister(e)}\n                    ></input>\n                </div>\n                <div className=\"form-group\">\n                    <input \n                      name=\"fullname\" \n                      className=\"form-control\" \n                      placeholder=\"Full Name\"\n                      value={fullname}\n                      onChange={(e) => handleChangeRegister(e)}\n                    ></input>\n                </div>\n                <div className=\"form-group\">\n                    <Button type=\"submit\" className=\"form-control btn-modal-register\">Register</Button>\n                </div>\n                </form>\n                <div className=\"d-flex justify-content-center\">Already have an account ? Klik <a onClick={()=> showLoginCloseRegister()} className=\"modal-link\">Here</a></div>\n                </Modal.Body>\n              </Modal>\n\n              <RegisterSuccess show={registerSuccessShow} onHide={() => setRegisterSuccessShow(false)}/>\n  </>\n        \n    )\n}\n\nexport default LandingPage\n","/home/septian/ReactJS/Final-Task/client/src/config/privateRoute/index.js",[],"/home/septian/ReactJS/Final-Task/client/src/context/appContext.js",[],"/home/septian/ReactJS/Final-Task/client/src/config/api.js",[],"/home/septian/ReactJS/Final-Task/client/src/pages/Home/index.js",["160","161","162"],"import React, {useContext, useState, useEffect} from 'react';\nimport {AppContext} from '../../context/appContext';\nimport { useHistory} from 'react-router-dom';\nimport { API,Port } from \"../../config/api\";\nimport {Header} from '../../components';\n\nimport './home.css';\nconst Home = () => {\n    const [state, dispatch ]= useContext(AppContext);\n    const {user} = state;\n    const [page, setPage] = useState('all');\n    const [posts, setPosts ] = useState([]);\n    const [postsByFollow, setPostsByFollow ] = useState([]);\n    const router = useHistory();\n\n    const fetchPosts = async () => {\n        try {\n            const response = await API(\"/posts\");\n            if (response.status === 500){\n                console.log(\"server error\")\n            }\n            setPosts(response.data.data.posts)\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    const fetchPostsByFollow = async () => {\n        try {\n            const response = await API(`/postbyfollow/${user.id}`);\n            if (response.status === 500){\n                console.log(\"server error\")\n            }\n            setPostsByFollow(response.data.data.postsbyfollow)\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    const detailPage = (id) => {\n        router.push(`/post-detail/${id}`);\n    }\n\n    useEffect(() => {\n        if (page === 'all'){\n            fetchPosts();\n        }\n        if(page === 'followed'){\n            fetchPostsByFollow();\n        }\n    }, [page])\n\n    return (\n        <div className=\"home\">\n            <Header/>\n            <div className=\"container mt-4\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <select name='page' onChange={(e) => setPage(e.target.value)} className=\"sorted\">\n                            <option value='all'>All Time</option>\n                            <option value='followed'>Followed</option>\n                        </select>\n                    </div>\n                </div>\n                <div className=\"row home-content\">\n                {\n                    page === 'all' ? \n                    posts.map((postdata) => (\n                        postdata.photos.length > 0 && postdata.photos.map((photo) => {\n                            return (\n                                photo && ( \n                                <div className=\"col-3 img-post-wrapper\">\n                                    <img className=\"post-image\" src={`${Port}/${photo.image}`} alt={postdata.id} onClick={()=>detailPage(postdata.id)}></img>\n                                </div>)\n                            )\n                        })\n                    )) :\n                    page == 'followed'?\n                    postsByFollow.map((post) => (\n                        postsByFollow.length > 0 && post.users.posts.map((post) => (\n                            post.photos.map((photo)=>(\n                                <div className=\"col-3 img-post-wrapper\">\n                                    <img \n                                        className=\"post-image\" \n                                        src={`${Port}/${photo.image}`} \n                                        alt={photo.image}\n                                        onClick={()=>detailPage(post.id)}\n                                    ></img>\n                                </div>\n                            ))\n                        ))\n                    ))\n                    :\n                    <><p>Ini Page </p></>\n                }\n                </div>\n            </div>\n            \n        </div>\n    )\n}\n\nexport default Home\n","/home/septian/ReactJS/Final-Task/client/src/pages/Logout/index.js",["163","164"],"import {useEffect, useContext, useState} from 'react';\nimport {AppContext} from '../../context/appContext';\nimport { Redirect } from \"react-router-dom\";\n\nconst Logout = () => {\n    const [state, dispatch ]= useContext(AppContext);\n    const [isLogout, setIsLogout ] = useState(false);\n\n    useEffect(() => {\n        dispatch({\n            type: \"LOGOUT\",\n        });\n        setIsLogout(true);\n        console.log(\"Ini Logout\",isLogout)\n    }, []);\n    \n    return isLogout && <Redirect to=\"/landing-page\"/>;\n}\n\nexport default Logout","/home/septian/ReactJS/Final-Task/client/src/components/index.js",[],"/home/septian/ReactJS/Final-Task/client/src/components/Header/index.js",[],"/home/septian/ReactJS/Final-Task/client/src/assets/index.js",[],"/home/septian/ReactJS/Final-Task/client/src/pages/PostDetail/index.js",["165","166","167","168","169","170","171","172","173"],"import { useState, useEffect, useContext } from \"react\";\nimport {Header} from '../../components';\nimport {API,Port} from '../../config/api';\nimport {Button} from 'react-bootstrap';\nimport { UserDefaultPict } from '../../assets';\nimport {Link, useParams} from 'react-router-dom';\nimport {AppContext} from '../../context/appContext';\nimport './postdetail.scss';\n\nconst PostDetail = () => {\n    const [state, dispatch ]= useContext(AppContext);\n    const {user} = state;\n    let {id} = useParams();\n    const [mainPicture, setMainPicture] = useState('');\n    const [postData, setPostData] = useState({\n        title : \"\",\n        description : \"\",\n        photos:[],\n        userData:{},\n        follow: 0,\n    });\n\n    const {title, description, photos, userData, follow} = postData;\n\n    const fetchPostDetail = async () => {\n        try{\n            const response = await API(`/post/${id}`);\n            const responseFollow = await API(`/check-follow/${response.data.data.post.user.id}`);\n            const responseLength = responseFollow.data.data.follow.length;\n            setPostData({\n                title: response.data.data.post.title,\n                description: response.data.data.post.description,\n                photos:response.data.data.post.photos,\n                userData : response.data.data.post.user, \n                follow : responseFollow.data.data.follow.length,\n            });\n            setMainPicture(response.data.data.post.photos[0].image);\n           \n        }catch (error) {\n            console.log(error);\n        }\n    }\n\n    const onFollow = async (id) => {\n        try {\n            const body = JSON.stringify({id});\n            const config = {\n                headers: {\n                    \"Content-Type\":\"application/json\",\n                },\n            }; \n            const response = await API.post(\"/follow\", body, config);\n            fetchPostDetail();\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    const onUnFollow = async (id) => {\n        try {\n            const response = await API.delete(`/unfollow/${id}`);\n            fetchPostDetail();\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    useEffect(()=> {\n        fetchPostDetail();\n    },[]);\n\n    return (\n        <div className=\"post-detail\">\n            <Header/>\n            <div className=\"container mt-4\">\n               <div className=\"row justify-content-center\">\n                <div className=\"col-9\">\n                <div className=\"row\">\n                    <div className=\"col-6\">\n                        <div className=\"row\">\n                            <div className=\"col-3\">\n                                <Link to={`/user/${userData.id}`}>\n                                    {\n                                        userData.avatar ? <img className=\"avatar\" src={`${Port}/${userData.avatar}`}></img> :\n                                        <img className=\"avatar\" src={UserDefaultPict}></img>\n                                    }\n                                    \n                                </Link>\n                            </div>\n                            <div className=\"col-9\">\n                                <div className=\"row\">\n                                    <Link to={`/user/${userData.id}`}><h4>{title}</h4></Link>\n                                </div>\n                                <div className=\"row\">\n                                    <Link to={`/user/${userData.id}`}><h6>{userData.fullname}</h6></Link>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    {\n                        userData.id === user.id ? <></> :\n                        <>\n                        <div className=\"col-6 d-flex justify-content-end\">\n                        {\n                            follow === 0 ? <><Button className=\"btn-follow\" onClick={()=>onFollow(userData.id)}>Follow</Button>&nbsp;</> : \n                            <><Button className=\"btn-follow\" onClick={()=>onUnFollow(userData.id)}>Unfollow</Button>&nbsp;</>\n                        }\n                            \n                            <Link to={`/hiring/${userData.id}`}><Button className=\"btn-hire\">Hire</Button></Link>\n                        </div>\n                        </>\n                    }\n                </div>\n                <div className=\"row big-image d-flex justify-content-center\">\n                    <div className=\"col img-big-container\">\n                        <img className=\"big-image\" src={`${Port}/${mainPicture}`} alt='main-picture'></img>\n                    </div>\n                </div>\n                <div className=\"row mt-2 d-flex justify-content-center\">\n                    {\n                        photos.map((photo)=>( \n                            <div className=\"col-md-2 img-small-container\">\n                                <img onClick={()=> setMainPicture(photo.image)} className=\"small-image\" src={`${Port}/${photo.image}`}>\n                            </img></div>\n                        ))\n                    }\n                </div>\n                <div className=\"row mt-2\">\n                    <div className=\"col\">\n                        <p>{description}</p>\n                    </div>\n                </div>\n                \n                </div>\n                </div>\n\n            </div>\n        </div>\n    )\n}\n\nexport default PostDetail\n","/home/septian/ReactJS/Final-Task/client/src/pages/Hiring/index.js",["174","175","176"],"import {Button} from 'react-bootstrap';\nimport React, { useState, useEffect, useContext} from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport {API} from '../../config/api';\nimport { Header } from '../../components'\nimport {AppContext} from '../../context/appContext';\nimport Modal from 'react-bootstrap/Modal';\nimport './hiring.scss';\n\nconst Hiring = () => {\n    let {id} = useParams();\n    const [modalShow, setModalShow] = React.useState(false);\n    const [state, dispatch] = useContext(AppContext);\n    const {user} = state;\n    const [formData, setFormData ] = useState({\n        title: \"\",\n        description : \"\",\n        startDate: \"\",\n        endDate:\"\",\n        price:\"\",\n        hiringBy:user.id,\n        hiringTo:id,\n        status:\"waiting\"\n      });\n\n    const {title, description, startDate,endDate,price,hiringBy,hiringTo,status} = formData;\n\n    function HiringSuccess(props) {\n        return (\n          <Modal\n            {...props}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n          >\n            <Modal.Body className=\"make-payment\">\n            <Link to=\"/myoffer\">\n                <p>\n                    We have sent your offer, please wait for the artist to accept it\n                </p>\n            </Link>\n            </Modal.Body>\n          </Modal>\n        );\n      };\n\n    const handleChange = (e) => {\n        setFormData({...formData, [e.target.name] : e.target.value });\n        console.log(formData);\n      };\n    \n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            const body = JSON.stringify({title,description,startDate,endDate,price,hiringBy,hiringTo,status});\n            const config = {\n              headers: {\n                  \"Content-Type\":\"application/json\",\n              },\n          }; \n          const response = await API.post(\"/order\", body, config);\n          setModalShow(true);\n          setFormData({\n            title: \"\",\n            description : \"\",\n            startDate: \"\",\n            endDate:\"\",\n            price:\"\",\n            hiringBy:user.id,\n            hiringTo:id,\n            status:\"waiting\"\n          });\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    return (\n        <div className=\"hiring\">\n            <Header></Header>\n            <div className=\"container mt-4\">\n            <form onSubmit={(e) => handleSubmit(e)}>\n                <div className=\"row justify-content-center\">\n                <div className=\"col-8\">\n                    <div className=\"form-group\">\n                        <input \n                            className=\"form-control\" \n                            placeholder=\"Title\"\n                            name=\"title\"\n                            value={title}\n                            onChange={(e) => handleChange(e)}\n                        ></input>\n                    </div>\n                </div>\n                </div>\n                <div className=\"row justify-content-center\">\n                <div className=\"col-8\">\n                    <div className=\"form-group\">\n                        <textarea \n                            className=\"form-control\" \n                            placeholder=\"Description\" \n                            name=\"description\" \n                            value={description}\n                            onChange={(e) => handleChange(e)}\n                        ></textarea>\n                    </div>\n                </div>\n                </div>\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-4\">\n                        <div className=\"form-group\">\n                            <input \n                                type=\"date\" \n                                className=\"form-control\" \n                                placeholder=\"Start Date\"\n                                name=\"startDate\"\n                                value={startDate}\n                                onChange={(e) => handleChange(e)}\n                            ></input>\n                        </div>\n                    </div>\n                    <div className=\"col-4\">\n                        <div className=\"form-group\">\n                            <input \n                                type=\"date\" \n                                className=\"form-control\" \n                                placeholder=\"End Date\"\n                                name=\"endDate\"\n                                value={endDate}\n                                onChange={(e) => handleChange(e)}\n                            ></input>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center\">\n                <div className=\"col-8\">\n                    <div className=\"form-group\">\n                        <input \n                            className=\"form-control\" \n                            placeholder=\"Price\"\n                            name=\"price\"\n                            value={price}\n                            onChange={(e) => handleChange(e)}\n                        ></input>\n                    </div>\n                        <input \n                            type=\"hidden\"\n                            className=\"form-control\" \n                            placeholder=\"orderby\"\n                            name=\"hiringBy\"\n                            value={hiringBy}\n                        ></input>\n                        <input \n                            type=\"hidden\"\n                            className=\"form-control\" \n                            placeholder=\"orderto\"\n                            name=\"hiringTo\"\n                            value={hiringTo}\n                        ></input>\n                    \n                </div>\n                </div>\n                <div className=\"row justify-content-center\">\n                        <Link to=\"/\"><Button className=\"btn-follow\">Cancel</Button></Link>&nbsp;<Button type=\"submit\" className=\"btn-hire\">Bidding</Button>\n                </div>\n                </form>\n            </div>\n            <HiringSuccess\n                show={modalShow}\n                onHide={() => setModalShow(false)}\n                />\n        </div>\n    )\n}\n\nexport default Hiring\n","/home/septian/ReactJS/Final-Task/client/src/pages/MyOrder/index.js",["177","178","179"],"import React, {useContext, useEffect, useState} from 'react'\nimport { ActionOrder, Header } from '../../components';\nimport {Button} from 'react-bootstrap';\nimport {useHistory} from 'react-router-dom';\nimport {AppContext} from '../../context/appContext';\nimport { API } from \"../../config/api\";\nimport './order.scss';\nimport Table from 'react-bootstrap/Table';\n\n\nconst MyOrder = () => {\n    const router = useHistory();\n    const [state, dispatch] = useContext(AppContext);\n    const {user} = state;\n    const [orders, setOrders ] = useState([]);\n\n    const fetchOrders = async () => {\n        try {\n            const response = await API(`/my-order/${user.id}`);\n            setOrders(response.data.data.orders);\n            console.log(response.data.data.orders.length);\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    const handleOrder = async (id, typeAction) => {\n        console.log(\"Action id\",id);\n        console.log(\"Action\", typeAction);\n        const body = JSON.stringify({id, status: typeAction});\n        const config = {\n            headers: {\n                \"Content-Type\":\"application/json\",\n            },\n        };\n        try {\n            const response = await API.patch(`/order/${id}`, body, config);\n            fetchOrders();\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    const toOrder = () => {\n        router.push(\"/myorder\");\n    };\n    const toOffer = () => {\n        router.push(\"/myoffer\");\n    };\n    useEffect(() => {\n        fetchOrders();\n    }, [])\n\n    return (\n        <div className=\"myorder\">\n            <Header />\n            <div className=\"container mt-4\">\n                <div className=\"row\">\n                        <div className=\"page-title\">\n                            <Button className=\"btn-hire\" onClick={toOrder}>My Order</Button>\n                            <Button className=\"btn-follow\" onClick={toOffer}>My Offer</Button>\n                        </div>\n                        <Table striped  hover>\n                        <thead>\n                            <tr>\n                            <th>No</th>\n                            <th>My Client</th>\n                            <th>Order</th>\n                            <th>Start Project</th>\n                            <th>End Project</th>\n                            <th>Status</th>\n                            <th className=\"d-flex justify-content-center\">Action</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {orders.map((orderdata,number) => (\n                                <ActionOrder \n                                    number = {number}\n                                    id = {orderdata.id}\n                                    fullname = {orderdata.orderBy.fullname}\n                                    title = {orderdata.title}\n                                    price = {orderdata.price}\n                                    description = {orderdata.description}\n                                    startDate = {orderdata.startDate}\n                                    endDate = {orderdata.endDate}\n                                    status = {orderdata.status}\n                                    handleOrder = {handleOrder}\n                                    className = \"detailorder\"\n                                /> \n                                )\n                        )}\n                        </tbody>\n                        </Table>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default MyOrder\n","/home/septian/ReactJS/Final-Task/client/src/pages/MyOffer/index.js",["180","181"],"import React, {useContext, useEffect, useState} from 'react'\nimport { ActionOffer,Header } from '../../components';\nimport {Button} from 'react-bootstrap';\nimport {useHistory} from 'react-router-dom';\nimport {AppContext} from '../../context/appContext';\nimport { API } from \"../../config/api\";\nimport Table from 'react-bootstrap/Table';\n\nconst MyOffer = () => {\n    const router = useHistory();\n    const [state, dispatch] = useContext(AppContext);\n    const {user} = state;\n    const [offers, setOffers ] = useState([]);\n\n    const fetchOffers = async () => {\n        try {\n            const response = await API(`/my-offer/${user.id}`);\n            setOffers(response.data.data.orders);\n        } catch (error) {\n            console.log(error);\n        }\n    }\n    \n    const toOrder = () => {\n        router.push(\"/myorder\");\n    };\n    const toOffer = () => {\n        router.push(\"/myoffer\");\n    };\n\n    useEffect(() => {\n        fetchOffers();\n    }, [])\n\n\n    return (\n        <div className=\"myorder\">\n            <Header />\n            <div className=\"container mt-4\">\n                <div className=\"row\">\n                        <div className=\"page-title\">\n                            <Button className=\"btn-follow\" onClick={toOrder}>My Order</Button>&nbsp;\n                            <Button className=\"btn-hire\" onClick={toOffer}>My Offer</Button>\n                        </div>\n                        <Table striped  hover>\n                        <thead>\n                            <tr>\n                            <th>No</th>\n                            <th>Artist</th>\n                            <th>Order</th>\n                            <th>Start Project</th>\n                            <th>End Project</th>\n                            <th>Status</th>\n                            <th className=\"d-flex justify-content-center\">Action</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {offers.map((offerdata,number) =>(\n                                <ActionOffer \n                                id = {offerdata.id}\n                                number = {number}\n                                fullname = {offerdata.orderTo.fullname}\n                                title = {offerdata.title}\n                                startDate = {offerdata.startDate}\n                                endDate = {offerdata.endDate}\n                                status = {offerdata.status}\n                                fetchOffers = {fetchOffers}\n                            />\n                        ))}\n                        </tbody>\n                        </Table>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default MyOffer\n","/home/septian/ReactJS/Final-Task/client/src/components/ActionOrder/index.js",["182"],"import React from 'react'\nimport dateFormat from 'dateformat';\nimport {OrderActionDropDown} from '../Atoms';\nimport {CancelIcon} from '../../assets';\nimport {Button} from 'react-bootstrap';\nimport Modal from 'react-bootstrap/Modal';\nimport {useHistory} from 'react-router-dom';\n\nconst ActionOrder = ({id, number, fullname, title, price, description, startDate, endDate,status, handleOrder}) => {\n    const router = useHistory();\n    let numbering = number + 1;\n    const [modalShow, setModalShow] = React.useState(false);\n\n    function ViewOrderModal (props) {\n        return (\n          <Modal\n            {...props}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n          >\n            <Modal.Body className=\"make-payment\">\n            <p>\n                Title : {title}\n            </p>\n            <p>\n                Description : {description}\n            </p>\n            <p>\n                Price : {price}\n            </p>\n            <div className=\"row d-flex justify-content-center\">\n              <Button onClick={()=> handleOrder(id)} className=\"btn-hire\">Yes</Button>&nbsp;\n              <Button onClick={()=> setModalShow(false)} className=\"btn-follow\">No</Button>\n            </div>\n            </Modal.Body>\n          </Modal>\n        );\n    };\n\n    const ViewProject = (id) => {\n        router.push(`viewproject/${id}`);\n    };\n    return (\n        <>\n        <tr>\n            <td className=\"orderdata\" onClick={()=>setModalShow(true)}>{numbering}</td>\n            <td className=\"orderdata\" onClick={()=>setModalShow(true)}>{fullname}</td>\n            <td className=\"orderdata\" onClick={()=>setModalShow(true)}>{title}</td>\n            <td width=\"15%\" className=\"orderdata\" onClick={()=>setModalShow(true)}>{dateFormat(startDate, \"dddd, mmm dS, yyyy\")}</td>\n            <td width=\"15%\" className=\"orderdata\" onClick={()=>setModalShow(true)}>{dateFormat(endDate, \"dddd, mmm dS, yyyy\")}</td>\n            <td className=\"orderdata\" onClick={()=>setModalShow(true)}>{\n                status === \"Cancel\" ? <>You Canceled this order</> : \n                status === \"waiting\" ?  <>Waiting Your Approval</> : \n                status === \"Finished\" ? <>You Finished this order</> : <>You Approved this order</>\n                }</td>\n            <td>\n                {\n                    status === \"Cancel\" ? <img src={CancelIcon}></img> : \n                    status === \"Finished\" ? <><Button onClick={()=>ViewProject(id)} className=\"btn-green\">View Project</Button></> : <><OrderActionDropDown id={id} status={status} handleOrder={handleOrder}/></>\n                }\n            </td>\n            <ViewOrderModal show={modalShow} onHide={() => setModalShow(false)}/>\n        </tr>\n        </>\n    )\n}\n\nexport default ActionOrder\n","/home/septian/ReactJS/Final-Task/client/src/components/Atoms/index.js",[],"/home/septian/ReactJS/Final-Task/client/src/components/Atoms/ProfileMenu/index.js",["183","184","185","186","187","188","189"],"import React, {useState,useContext} from 'react';\nimport {AppContext} from \"../../../context/appContext\";\nimport { LogoutIcon, CallOut, ProfileIcon, OrderIcon} from \"../../../assets\";\nimport {useHistory} from 'react-router-dom';\nimport { Dropdown, Button} from \"react-bootstrap\";\nimport { UserDefaultPict } from '../../../assets';\nimport {Port} from '../../../config/api';\nimport './profilemenu.scss';\n\nconst ProfileMenu = () => {\n    const [state, dispatch] = useContext(AppContext);\n    const {user} = state;\n    const router = useHistory();\n    \n    const toOrder =() => {\n        router.push(\"/myorder\");\n    }\n\n    const toAddPost =() => {\n      router.push(\"/add-post\");\n  }\n\n    const toProfile =() => {\n      router.push(\"/profile\");\n    }\n    \n    const handleLogout = () => {\n        router.push(\"/logout\");\n    };\n\n    const CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\n        <a\n          href=\"\"\n          ref={ref}\n          onClick={(e) => {\n            e.preventDefault();\n            onClick(e);\n          }}\n        > {\n            user.avatar ? <img src={`${Port}/${user.avatar}`} alt=\"profile\" className=\"img-profile\"></img> :\n            <img src={UserDefaultPict} alt=\"profile\" className=\"img-profile\"></img>\n          }\n            \n        </a>\n      ));\n\n    const CustomMenu = React.forwardRef(\n        ({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\n          const [value, setValue] = useState('');\n      \n          return (\n            <div\n              ref={ref}\n              className={className}\n              aria-labelledby={labeledBy}\n            >\n              {/* src={CallOut} */}\n            <img  src={CallOut} className=\"dropdownmenu-arrow\"></img>\n              <ul className=\"list-unstyled\">\n                {React.Children.toArray(children).filter(\n                  (child) =>\n                    !value || child.props.children.toLowerCase().startsWith(value),\n                )}\n              </ul>\n            </div>\n          );\n        },\n      );\n\n    return (\n      <>\n        \n        <div className=\"col d-flex justify-content-end profile-menu\">\n        <Button className=\"btn-upload-header\" onClick={toAddPost}>Upload</Button>\n            <Dropdown>\n                <Dropdown.Toggle as={CustomToggle} id=\"dropdown-custom-components\"></Dropdown.Toggle>\n                <Dropdown.Menu className=\"dropdown-menu-right\" as={CustomMenu}>\n                    <Dropdown.Item eventKey=\"1\" onClick={toProfile}><img src={ProfileIcon} className=\"dropdown-icon\"></img>Profile</Dropdown.Item>\n                    <Dropdown.Item eventKey=\"2\" onClick={toOrder}><img src={OrderIcon} className=\"dropdown-icon\"></img>Order</Dropdown.Item>\n                <Dropdown.Divider />\n                <Dropdown.Item eventKey=\"3\" onClick={handleLogout}><img src={LogoutIcon} className=\"dropdown-icon\"></img>Logout</Dropdown.Item>\n                </Dropdown.Menu>\n            </Dropdown>\n        </div>\n      </>\n    )\n}\n\nexport default ProfileMenu","/home/septian/ReactJS/Final-Task/client/src/components/Atoms/OrderAction/index.js",["190","191","192"],"import React, {useState} from 'react';\nimport { Dropdown } from \"react-bootstrap\";\nimport { ActionArrow} from \"../../../assets\";\nimport {useHistory} from 'react-router-dom';\nimport './orderAction.scss';\n\nconst OrderActionDropDown = ({id, handleOrder, status}) => {\n  \n    const router = useHistory();\n    const toSendProject = (id) => {\n      router.push(`/send/${id}`);\n    };\n\n    const CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\n        <a\n          href=\"\"\n          ref={ref}\n          onClick={(e) => {\n            e.preventDefault();\n            onClick(e);\n          }}\n        >\n        <img src={ActionArrow}></img>\n        </a>\n      ));\n\n    const CustomMenu = React.forwardRef(\n        ({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\n          const [value, setValue] = useState('');\n      \n          return (\n            <div\n              ref={ref}\n              className={className}\n              aria-labelledby={labeledBy}\n            >\n           \n              <ul className=\"list-unstyled\">\n                {React.Children.toArray(children).filter(\n                  (child) =>\n                    !value || child.props.children.toLowerCase().startsWith(value),\n                )}\n              </ul>\n            </div>\n          );\n        },\n      );\n\n    return (\n        <div className=\"d-flex justify-content-center profile-menu\">\n            <Dropdown>\n                <Dropdown.Toggle as={CustomToggle} id=\"dropdown-custom-components\"></Dropdown.Toggle>\n                <Dropdown.Menu className=\"payment-dropdown dropdown-menu-right\" as={CustomMenu}>\n                  {\n                    status === \"waiting\" ?\n                      <>\n                      <Dropdown.Item eventKey=\"1\" className=\"d-flex justify-content-center approve\" onClick={()=>handleOrder(id,\"Approved\")}>Approve</Dropdown.Item>\n                      <Dropdown.Item eventKey=\"2\" className=\"d-flex justify-content-center cancel\" onClick={()=>handleOrder(id,\"Cancel\")}>Cancel</Dropdown.Item>\n                      </>\n                    :\n                    <>\n                      <Dropdown.Item eventKey=\"1\" className=\"d-flex justify-content-center approve\" onClick={()=>toSendProject(id)}>Send Project</Dropdown.Item>\n                      <Dropdown.Item eventKey=\"2\" className=\"d-flex justify-content-center cancel\" onClick={()=>handleOrder(id,\"Cancel\")}>Cancel</Dropdown.Item>\n                    </>\n                  }\n                    \n                </Dropdown.Menu>\n            </Dropdown>\n        </div>\n    )\n}\n\nexport default OrderActionDropDown;","/home/septian/ReactJS/Final-Task/client/src/components/ActionOffer/index.js",["193"],"import React from 'react'\nimport dateFormat from 'dateformat';\nimport {Button} from 'react-bootstrap';\nimport Modal from 'react-bootstrap/Modal';\nimport {useHistory} from 'react-router-dom';\nimport { API } from \"../../config/api\";\n\nconst ActionOffer = ({id, number, fullname, title, startDate, endDate,status,fetchOffers}) => {\n    const router = useHistory();\n    let numbering = number + 1;\n    const [modalShow, setModalShow] = React.useState(false);\n\n    const handleDelete = async (id) => {\n        console.log(\"Cancel\", id);\n        try {\n            const response = await API.delete(`/order/${id}`);\n            setModalShow(false);\n            fetchOffers();\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    function DeleteModal (props) {\n        return (\n          <Modal\n            {...props}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n          >\n            <Modal.Body className=\"make-payment\">\n            <p>\n                Are you sure to cancel offer \"{title}\" to {fullname} ?\n            </p>\n            <div className=\"row d-flex justify-content-center\">\n              <Button onClick={()=> handleDelete(id)} className=\"btn-hire\">Yes</Button>&nbsp;\n              <Button onClick={()=> setModalShow(false)} className=\"btn-follow\">No</Button>\n            </div>\n            </Modal.Body>\n          </Modal>\n        );\n    };\n\n    const ViewProject = (id) => {\n        router.push(`viewproject/${id}`);\n    };\n\n    return (\n        <>\n        <tr>\n            <td>{numbering}</td>\n            <td>{fullname}</td>\n            <td>{title}</td>\n            <td>{dateFormat(startDate, \"dddd, mmm dS, yyyy\")}</td>\n            <td>{dateFormat(endDate, \"dddd, mmm dS, yyyy\")}</td>\n            <td>{\n                status === \"waiting\" ? <>Waiting Approval Artist</> :\n                status === \"Cancel\" ? <>Canceled by Artist</> : \n                status === \"Finished\" ? <>Project Completed</> :\n                <>Approved by Artist</>\n                }</td>\n            <td align=\"center\">{\n                status === \"Approved\" ? <>Waiting Artist upload Project</> : \n                status === \"Finished\" ? <Button onClick={()=>ViewProject(id)} className=\"btn-green\">View Project</Button> :\n                <Button onClick={()=> setModalShow(true)} className=\"btn-danger\">Cancel</Button> \n            }</td>\n        </tr>\n        <DeleteModal show={modalShow} onHide={() => setModalShow(false)}/>\n        </>\n    )\n}\n\nexport default ActionOffer\n","/home/septian/ReactJS/Final-Task/client/src/pages/Profile/index.js",["194","195","196","197","198","199","200"],"import React, {useContext, useEffect, useState}from 'react'\nimport {Header} from '../../components';\nimport {Button} from 'react-bootstrap';\nimport {Link} from  'react-router-dom';\nimport {IdeaNotFound} from '../../assets';\nimport { API,Port} from \"../../config/api\";\nimport { UserDefaultPict } from '../../assets';\nimport {AppContext} from '../../context/appContext';\n\nimport './profile.scss';\n\nconst Profile = () => {\n    const [state, dispatch ]= useContext(AppContext);\n    const {user} = state;\n    const [profileData, setProfileData] = useState({\n        fullname : \"\",\n        greeting : \"\",\n        avatar : \"\",\n        postslength : null,\n        posts : [],\n        arts:[],\n    });\n\n    const {fullname, greeting, avatar, posts, postslength, arts} = profileData;\n    const fetchProfile = async () => {\n        try {\n            const response = await API(`/profile/${user.id}`);\n            //console.log(response.data.data.user.posts[0].photos)\n            setProfileData({\n                fullname: response.data.data.user.fullname,\n                greeting: response.data.data.user.greeting,\n                avatar: response.data.data.user.avatar,\n                postslength : response.data.data.user.posts.length,\n                posts: response.data.data.user.posts,\n                arts: response.data.data.user.arts\n            });\n            console.log(\"Ini FullName\",postslength)\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    useEffect(() => {\n        fetchProfile();\n    }, [])\n\n    return (\n        <div className=\"profile\">\n            <Header/>\n            <div className=\"container profile-container\">\n                <div className=\"green-attribute\"></div>\n                <div className=\"row mt-4\">\n                    <div className=\"col-5\">\n                        {\n                            avatar ? <img src={`${Port}/${avatar}`} className=\"avatar\"></img> :\n                            <img src={UserDefaultPict} className=\"avatar\"></img>\n                        }\n                        \n                        <h6 className=\"username mt-4\">{fullname}</h6>\n                        <h1 className=\"greeting mt-4\">{greeting}</h1>\n                        <Link to=\"/edit-profile\"><Button className=\"btn-green mt-4\">Edit Profile</Button></Link>\n                    </div>\n                    <div className=\"col-7 post-container\">\n                        {\n                            postslength === 0 ? <><img src={IdeaNotFound} className=\"post-image\"></img></> :\n                            posts.map((post) => (\n                                post.photos.map((photo) => (\n                                    <img src={`${Port}/${photo.image}`} className=\"post-image\" alt=\"ini\"></img>\n                                ))\n                            ))\n                        }\n                    </div>\n                </div>\n                <div className=\"row mt-4\"><div className=\"col\">My Works</div></div>\n                <div className=\"row mt-3\">\n                    {\n                        arts.length === 0 ? <><div className=\"wrapper-img\"><img src={IdeaNotFound}></img></div></> :\n                        arts.map((photo)=>( \n                            <>\n                            <div className=\"col-4 mt-4 wrapper-art\"><img src={`${Port}/${photo.image}`} className=\"image-art\"></img></div>\n                            </>\n                        ))\n                    }\n                </div>\n                \n            </div>\n        </div>\n    )\n}\n\nexport default Profile\n","/home/septian/ReactJS/Final-Task/client/src/pages/User/index.js",["201","202","203","204","205","206","207","208","209","210"],"import React, {useContext, useEffect, useState}from 'react'\nimport {Header} from '../../components';\nimport {Button} from 'react-bootstrap';\nimport {Link, useParams} from 'react-router-dom';\nimport {AppContext} from '../../context/appContext';\nimport {IdeaNotFound, UserDefaultPict} from '../../assets';\nimport { API,Port} from \"../../config/api\";\n\nconst User = () => {\n    const [state, dispatch ]= useContext(AppContext);\n    const {user} = state;\n    let {id} = useParams();\n    const [profileData, setProfileData] = useState({\n        idUser : \"\",\n        fullname : \"\",\n        greeting : \"\",\n        avatar : \"\",\n        postslength : null,\n        posts : [],\n        arts:[],\n        follow : 0\n    });\n\n    const {idUser, fullname, greeting, avatar, posts, postslength, arts, follow} = profileData;\n    const fetchUser = async () => {\n        try {\n            const response = await API(`/profile/${id}`);\n            const responseFollow = await API(`/check-follow/${response.data.data.user.id}`);\n            const responseLength = responseFollow.data.data.follow.length;\n\n            setProfileData({\n                idUser : response.data.data.user.id,\n                fullname: response.data.data.user.fullname,\n                greeting: response.data.data.user.greeting,\n                avatar: response.data.data.user.avatar,\n                postslength : response.data.data.user.posts.length,\n                posts: response.data.data.user.posts,\n                arts: response.data.data.user.arts,\n                follow : responseFollow.data.data.follow.length,\n            });\n            \n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    const onFollow = async (id) => {\n        try {\n            const body = JSON.stringify({id});\n            const config = {\n                headers: {\n                    \"Content-Type\":\"application/json\",\n                },\n            }; \n            const response = await API.post(\"/follow\", body, config);\n            fetchUser();\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    const onUnFollow = async (id) => {\n        try {\n            const response = await API.delete(`/unfollow/${id}`);\n            fetchUser();\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    useEffect(() => {\n        fetchUser();\n    }, [])\n\n    return (\n        <div className=\"profile\">\n            <Header/>\n            <div className=\"container profile-container\">\n                <div className=\"green-attribute\"></div>\n                <div className=\"row mt-4\">\n                    <div className=\"col-5\">\n                        {\n                            avatar ? <img src={`${Port}/${avatar}`} className=\"avatar\"></img> :\n                            <img src={UserDefaultPict} className=\"avatar\"></img>\n                        }\n                        <h6 className=\"username mt-4\">{fullname}</h6>\n                        <h1 className=\"greeting mt-4\">{greeting}</h1>\n                    {\n                        idUser === user.id ? <><Link to=\"/edit-profile\"><Button className=\"btn-green mt-4\">Edit Profile</Button></Link></> :\n                        <>\n                        {\n                            follow === 0 ? <><Button className=\"btn-follow mt-4\" onClick={()=>onFollow(idUser)}>Follow</Button>&nbsp;</> : \n                            <><Button className=\"btn-follow mt-4\" onClick={()=>onUnFollow(idUser)}>Unfollow</Button>&nbsp;</>\n                        }\n                        <Link to={`/hiring/${idUser}`}><Button className=\"btn-hire mt-4\">Hire</Button></Link>\n                        </>\n                    }\n                    </div>\n                    <div className=\"col-7 post-container\">\n                        {\n                            postslength === 0 ? <><img src={IdeaNotFound} className=\"post-image\"></img></> :\n                            posts.map((post) => (\n                                post.photos.map((photo) => (\n                                    <img src={`${Port}/${photo.image}`} className=\"post-image\" alt=\"ini\"></img>\n                                ))\n                            ))\n                        }\n                    </div>\n                </div>\n                <div className=\"row mt-4\"><div className=\"col\">{fullname} Works</div></div>\n                <div className=\"row mt-3\">\n                    {   \n                        arts.length === 0 ? <><div className=\"wrapper-img\"><img src={IdeaNotFound}></img></div></> :\n                        arts.map((photo)=>( \n                            <>\n                            <div className=\"col-4 mt-4 wrapper-art\"><img src={`${Port}/${photo.image}`} className=\"image-art\"></img></div>\n                            </>\n                        ))\n                    }\n                </div>\n                \n            </div>\n        </div>\n    )\n}\n\nexport default User\n","/home/septian/ReactJS/Final-Task/client/src/pages/AddPost/index.js",["211","212","213"],"import React, {useState, useEffect, useContext} from 'react';\nimport {AppContext} from \"../../context/appContext\";\nimport {Button} from 'react-bootstrap';\nimport {Header} from '../../components';\nimport Dropzone from 'react-dropzone';\nimport { API } from \"../../config/api\";\nimport {useHistory} from 'react-router-dom';\n\nimport './addpost.scss';\nconst AddPost = () => {\n    const router = useHistory();\n    const [state, dispatch] = useContext(AppContext);\n    const {user} = state;\n    const [photos, setPhotos] = useState([]);\n    const [formData, setFormData] = useState({\n        id : user.id,\n        title: '',\n        description: ''\n    });\n    const {id, title, description} = formData;\n    const handleChange = (file1) => {\n       setPhotos( arr => [...arr, file1]);\n    };\n\n    const onChange = (e) => {\n        setFormData({...formData, [e.target.name]: e.target.value});\n        console.log(formData);\n    };\n\n    const onSubmit =  async (e) => {\n        e.preventDefault();\n        console.log(\"ini title\", title)\n        const formAddPost = new FormData();\n        if(photos[0] !== undefined) {formAddPost.append('photos', photos[0].[0]);}\n        if(photos[1] !== undefined) {formAddPost.append('photos', photos[1].[0]);}\n        if(photos[2] !== undefined) {formAddPost.append('photos', photos[2].[0]);}\n        if(photos[3] !== undefined) {formAddPost.append('photos', photos[3].[0]);}\n        if(photos[4] !== undefined) {formAddPost.append('photos', photos[4].[0]);}\n        formAddPost.append('title', title);\n        formAddPost.append('description',description);\n\n        const config = {\n            headers: {\n              'Content-type': 'multipart/form-data',\n            },\n        };\n\n        try {\n            const response = await API.post(`/post/${id}`, formAddPost, config);\n            router.push(\"/\");\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    useEffect(() => {\n        setFormData({\n            id : user.id,\n            title: '',\n            description: ''\n        })\n    }, [])\n\n    return (\n        <div className=\"add-post\">\n            <Header />\n            <div className=\"container mt-4\">\n            <form onSubmit={onSubmit}>\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-10\">\n                        <div className=\"row\">\n                            <div className=\"col-7\">\n                                <Dropzone multiple={false} onDrop={acceptedFiles => handleChange(acceptedFiles)}>\n                                    {({getRootProps, getInputProps}) => (\n                                        <section>\n                                        <div {...getRootProps()} className=\"drop-files-post d-flex justify-content-center align-items-end\">\n                                            <input {...getInputProps()} name=\"photos\"/>\n                                            {photos[0] !== undefined ? <img src={URL.createObjectURL(photos[0].[0])} className=\"img-big-post-preview\" alt=\"ini\"></img> : \n                                            <><p className=\"browse-file\"><span className=\"green\">Browse</span> to choose a file</p></>}\n                                        </div>.\n                                        </section>\n                                    )}\n                                </Dropzone>\n                                <div className=\"row\">\n                                    <Dropzone multiple={false} onDrop={acceptedFiles => handleChange(acceptedFiles)}>\n                                        {({getRootProps, getInputProps}) => (\n                                            <section className=\"col-3\">\n                                            <div {...getRootProps()} className=\"drop-files-project\">\n                                                <input {...getInputProps()}/>\n                                                {photos[1] !== undefined ? <img className=\"img-big-post-preview\" src={URL.createObjectURL(photos[1].[0])} alt=\"ini\"></img> : \n                                            <></>}\n                                            </div>\n                                            </section>\n                                        )}\n                                    </Dropzone>\n                                    <Dropzone multiple={false} onDrop={acceptedFiles => handleChange(acceptedFiles)}>\n                                        {({getRootProps, getInputProps}) => (\n                                            <section className=\"col-3\">\n                                            <div {...getRootProps()} className=\"drop-files-project\">\n                                                <input {...getInputProps()}/>\n                                                {photos[2] !== undefined ? <img className=\"img-big-post-preview\" src={URL.createObjectURL(photos[2].[0])} alt=\"ini\"></img> : \n                                            <></>}\n                                            </div>\n                                            </section>\n                                        )}\n                                    </Dropzone>\n                                    <Dropzone multiple={false} onDrop={acceptedFiles => handleChange(acceptedFiles)}>\n                                        {({getRootProps, getInputProps}) => (\n                                            <section className=\"col-3\">\n                                            <div {...getRootProps()} className=\"drop-files-project\">\n                                                <input {...getInputProps()}/>\n                                                {photos[3] !== undefined ? <img className=\"img-big-post-preview\" src={URL.createObjectURL(photos[3].[0])} alt=\"ini\"></img> : \n                                            <></>}\n                                            </div>\n                                            </section>\n                                        )}\n                                    </Dropzone>\n                                    <Dropzone multiple={false} onDrop={acceptedFiles => handleChange(acceptedFiles)}>\n                                        {({getRootProps, getInputProps}) => (\n                                            <section className=\"col-3\">\n                                            <div {...getRootProps()} className=\"drop-files-project\">\n                                                <input {...getInputProps()}/>\n                                                {photos[4] !== undefined ? <img className=\"img-big-post-preview\" src={URL.createObjectURL(photos[4].[0])} alt=\"ini\"></img> : \n                                            <></>}\n                                            </div>\n                                            </section>\n                                        )}\n                                    </Dropzone>    \n                                </div>\n                            </div>\n                            <div className=\"col-5\">\n                                <div className=\"form-group\">\n                                    <input \n                                        className=\"form-control\" \n                                        placeholder=\"Title\"\n                                        name=\"title\"\n                                        value={title}\n                                        onChange={onChange}\n                                    ></input>\n                                </div>\n                                <div className=\"form-group\">\n                                    <textarea \n                                        className=\"form-control textarea\" \n                                        placeholder=\"Description\"\n                                        name=\"description\"\n                                        value={description}\n                                        onChange={onChange}\n                                    ></textarea>\n                                </div>\n                                <div className=\"form-group d-flex justify-content-center mt-4\">\n                                    <Button className=\"btn-green\">Cancel</Button>&nbsp;\n                                    <Button className=\"btn-green\" type=\"submit\">Post</Button>\n                                </div>\n                            </div>\n                           \n                        </div>\n                    </div>\n                </div>\n                </form>      \n            </div>\n        </div>\n    )\n}\n\nexport default AddPost\n","/home/septian/ReactJS/Final-Task/client/src/pages/EditProfile/index.js",["214","215","216","217"],"import React, {useState, useContext, useEffect} from 'react'\nimport {AppContext} from \"../../context/appContext\";\nimport {Button} from 'react-bootstrap';\nimport {Header} from '../../components';\nimport Dropzone from 'react-dropzone';\nimport { API } from \"../../config/api\";\nimport {useHistory} from 'react-router-dom';\n\nimport './editprofile.scss';\n\nconst EditProfile = () => {\n    const [state, dispatch] = useContext(AppContext);\n    const {user} = state;\n    const router = useHistory();\n    const [data, setData] = useState('');\n    const [arts, setArts] = useState([]);\n\n    const [formData, setFormData] = useState({\n        id: user.id,\n        fullname: '',\n        greeting: '',\n    });\n    const {id, fullname, greeting} = formData;\n\n    const addArt = async (fileArts) => {\n        \n        const formAddArt = new FormData();\n        if(fileArts !== undefined){\n            console.log(\"ini file\", fileArts[0]);\n            fileArts.map((file, i) => (\n                formAddArt.append('arts', fileArts[i])\n            ));\n        }\n        const config = {\n            headers: {\n                'Content-type': 'multipart/form-data',\n            },\n        };\n\n        try {\n            const response = await API.post(`/upload-arts/${id}`, formAddArt, config);\n            router.push(\"/profile\");\n        } catch (error) {\n            console.log(error);\n        }\n    }\n    const handleProfileChange = (files) => {\n        setData({files});\n        console.log(\"Ini Data\",data);\n    }\n\n    const onChange = (e) => {\n        setFormData({...formData, [e.target.name]: e.target.value});\n        console.log(formData);\n    }\n\n    const onSubmit = async (e) => {\n        e.preventDefault();\n        const formEditProfile = new FormData();\n        formEditProfile.append('fullname', fullname);\n        formEditProfile.append('greeting', greeting);\n        if(data.files !== undefined) {\n            formEditProfile.append('avatar', data.files[0]);\n        }\n\n        const config = {\n            headers: {\n                'Content-type': 'multipart/form-data',\n            },\n        };\n\n        try {\n            const response = await API.put(`/profile/${id}`, formEditProfile, config);\n            console.log(\"Ini Response Edit\",response.data.data.getUserAfterUpdate);\n            dispatch({\n                type: \"EDITPROFILE\",\n                payload: response.data.data.getUserAfterUpdate,\n            });\n            router.goBack(); \n        } catch (error) {\n            console.log(error);\n        }   \n    }\n    useEffect(() => {\n        setFormData({\n            id : user.id,\n            fullname: user.name,\n            greeting: user.greeting,\n        })\n      }, []);\n    return (\n        <div className=\"add-post\">\n            <Header />\n            <div className=\"container mt-4\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-10\">\n                        <div className=\"row\">\n                            <div className=\"col-7\">\n                                <Dropzone  onDrop={acceptedFiles => addArt(acceptedFiles)}>\n                                    {({getRootProps, getInputProps}) => (\n                                        <section>\n                                        <div {...getRootProps()} className=\"drop-files-arts d-flex justify-content-center align-items-center\">\n                                            <input {...getInputProps()}/>\n                                            <p><span className=\"green\">Upload</span> Best Your Art</p>\n                                        </div>\n                                        </section>\n                                    )}\n                                </Dropzone>\n                                {\n                                    \n                                    arts.fileArts !== undefined &&\n                                    <>\n                                    <h3>Previews</h3>\n                                    {\n                                        <img src={URL.createObjectURL(arts.fileArts[0])} alt={arts.fileArts[0].name}></img>\n                                        // arts.fileArts.map((file) => (\n                                        //     <img src={URL.createObjectURL(arts.fileArts[1])} alt={file.name}></img>\n                                        // ))\n                                    }\n                                    </>\n                                }\n                            </div>\n                            <div className=\"col-5\">\n                                <form onSubmit={onSubmit}>\n                                <div className=\"form-group d-flex justify-content-center\">\n                                    <Dropzone multiple={false} onDrop={acceptedFiles => handleProfileChange(acceptedFiles)}>\n                                        {({getRootProps, getInputProps}) => (\n                                            <section>\n                                            \n                                            <div {...getRootProps()} className=\"drop-files-profile \">\n                                                <input {...getInputProps()}/>\n                                                {data !== '' ? <img className=\"img-profile-preview\" src={URL.createObjectURL(data.files[0])}></img> : <></>}\n                                            </div>\n                                            </section>\n                                        )}\n                                    </Dropzone>\n                                </div>\n                                <div className=\"form-group\">\n                                    <input \n                                        className=\"form-control\" \n                                        placeholder=\"Greeting\"\n                                        name=\"greeting\"\n                                        value={greeting}\n                                        onChange={onChange}\n                                    ></input>\n                                </div>\n                                <div className=\"form-group\">\n                                    <input \n                                        className=\"form-control\" \n                                        placeholder=\"Full Name\"\n                                        name=\"fullname\"\n                                        value={fullname}\n                                        onChange={onChange}\n                                    ></input>\n                                </div>\n                                <div className=\"form-group d-flex justify-content-center mt-4\">\n                                    <Button className=\"btn-green\" type=\"submit\">Save</Button>\n                                </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                   \n            </div>\n        </div>\n    )\n}\n\nexport default EditProfile\n","/home/septian/ReactJS/Final-Task/client/src/pages/SendProject/index.js",["218","219"],"import React, {useState, useEffect} from 'react'\nimport {Button} from 'react-bootstrap';\nimport {Header} from '../../components';\nimport Dropzone from 'react-dropzone';\nimport {useParams} from 'react-router-dom';\nimport { API } from \"../../config/api\";\nimport {useHistory} from 'react-router-dom';\n\nconst SendProject = () => {\n    const router = useHistory();\n    let {id} = useParams();\n    const [photosProject, setPhotosProject] = useState([]);\n    const [formData, setFormData] = useState({\n        hiringId : id,\n        description: ''\n    });\n\n    const {hiringId, description} = formData;\n    const onChange = (e) => {\n        setFormData({...formData, [e.target.name]: e.target.value});\n        console.log(formData);\n    };\n\n    const handleChange = (file1) => {\n        setPhotosProject( arr => [...arr, file1]);\n     };\n\n     const onSubmit =  async (e) => {\n        e.preventDefault();\n        const formAddProject = new FormData();\n        if(photosProject[0] !== undefined) {formAddProject.append('projectphotos', photosProject[0].[0]);}\n        if(photosProject[1] !== undefined) {formAddProject.append('projectphotos', photosProject[1].[0]);}\n        if(photosProject[2] !== undefined) {formAddProject.append('projectphotos', photosProject[2].[0]);}\n        if(photosProject[3] !== undefined) {formAddProject.append('projectphotos', photosProject[3].[0]);}\n        if(photosProject[4] !== undefined) {formAddProject.append('projectphotos', photosProject[4].[0]);}\n\n        formAddProject.append('description',description);\n\n        const config = {\n            headers: {\n              'Content-Type': 'multipart/form-data',\n            },\n        };\n\n        try {\n            const response = await API.post(`/project/${hiringId}`, formAddProject, config);\n            router.push(\"/myorder\");\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n     useEffect(() => {\n        setFormData({\n            hiringId : id,\n            description: ''\n        })\n    }, [])\n\n    return (\n        <div className=\"add-post\">\n            <Header />\n            <div className=\"container mt-4\">\n            <form onSubmit={onSubmit}>\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-10\">\n                        <div className=\"row\">\n                            <div className=\"col-7\">\n                                <Dropzone multiple={false} onDrop={acceptedFiles => handleChange(acceptedFiles)}>\n                                    {({getRootProps, getInputProps}) => (\n                                        <section>\n                                        <div {...getRootProps()} className=\"drop-files-post d-flex justify-content-center align-items-end\">\n                                            <input {...getInputProps()}/>\n                                            {photosProject[0] !== undefined ? <img src={URL.createObjectURL(photosProject[0].[0])} className=\"img-big-post-preview\" alt=\"ini\"></img> : \n                                            <><p className=\"browse-file\"><span className=\"green\">Browse</span> to choose a Project</p></>}\n                                        </div>\n                                        </section>\n                                    )}\n                                </Dropzone>\n                                <div className=\"row mt-4\">\n                                    <Dropzone multiple={false} onDrop={acceptedFiles => handleChange(acceptedFiles)}>\n                                        {({getRootProps, getInputProps}) => (\n                                            <section className=\"col-3\">\n                                            <div {...getRootProps()} className=\"drop-files-project\">\n                                                <input {...getInputProps()}/>\n                                                {photosProject[1] !== undefined ? <img className=\"img-big-post-preview\" src={URL.createObjectURL(photosProject[1].[0])} alt=\"ini\"></img> : \n                                            <></>}\n                                            </div>\n                                            </section>\n                                        )}\n                                    </Dropzone>\n                                    <Dropzone multiple={false} onDrop={acceptedFiles => handleChange(acceptedFiles)}>\n                                        {({getRootProps, getInputProps}) => (\n                                            <section className=\"col-3\">\n                                            <div {...getRootProps()} className=\"drop-files-project\">\n                                                <input {...getInputProps()}/>\n                                                {photosProject[2] !== undefined ? <img className=\"img-big-post-preview\" src={URL.createObjectURL(photosProject[2].[0])} alt=\"ini\"></img> : \n                                            <></>}\n                                            </div>\n                                            </section>\n                                        )}\n                                    </Dropzone>\n                                    <Dropzone multiple={false} onDrop={acceptedFiles => handleChange(acceptedFiles)}>\n                                        {({getRootProps, getInputProps}) => (\n                                            <section className=\"col-3\">\n                                            <div {...getRootProps()} className=\"drop-files-project\">\n                                                <input {...getInputProps()}/>\n                                                {photosProject[3] !== undefined ? <img className=\"img-big-post-preview\" src={URL.createObjectURL(photosProject[3].[0])} alt=\"ini\"></img> : \n                                            <></>}\n                                            </div>\n                                            </section>\n                                        )}\n                                    </Dropzone>\n                                    <Dropzone multiple={false} onDrop={acceptedFiles => handleChange(acceptedFiles)}>\n                                        {({getRootProps, getInputProps}) => (\n                                            <section className=\"col-3\">\n                                            <div {...getRootProps()} className=\"drop-files-project\">\n                                                <input {...getInputProps()}/>\n                                                {photosProject[4] !== undefined ? <img className=\"img-big-post-preview\" src={URL.createObjectURL(photosProject[4].[0])} alt=\"ini\"></img> : \n                                            <></>}\n                                            </div>\n                                            </section>\n                                        )}\n                                    </Dropzone>    \n                                </div>\n                            </div>\n                            <div className=\"col-5\">\n                                <div className=\"form-group\">\n                                    <textarea \n                                        className=\"form-control textarea\" \n                                        placeholder=\"Description\"\n                                        name=\"description\"\n                                        value={description}\n                                        onChange={onChange}\n                                    ></textarea>\n                                </div>\n                                <div className=\"form-group d-flex justify-content-center mt-4\">\n                                    <Button className=\"btn-green\" type=\"submit\">Send Project</Button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </form>       \n            </div>\n        </div>\n    )\n}\n\nexport default SendProject\n","/home/septian/ReactJS/Final-Task/client/src/pages/ViewProject/index.js",["220","221","222","223"],"import React, {useState, useEffect} from 'react'\nimport {Button} from 'react-bootstrap';\nimport Modal from 'react-bootstrap/Modal'\nimport {Header} from '../../components';\nimport {useParams} from 'react-router-dom';\nimport { API,Port } from \"../../config/api\";\nimport './viewproject.scss';\nconst ViewProject = () => {\n    let {id} = useParams();\n    const [modalShow, setModalShow] = React.useState(false);\n    const [mainPicture, setMainPicture] = useState('');\n    const [projectData, setProjectData] = useState({\n        description : \"\",\n        photos:[],\n    });\n    const {description, photos} = projectData;\n    const fetchProjectDetail = async () => {\n        try{\n            const response = await API(`/project/${id}`);\n            console.log(response);\n            setProjectData({\n                description: response.data.data.project.description,\n                photos:response.data.data.project.photos,\n            });\n            setMainPicture(response.data.data.project.photos[0].image);\n        }catch (error) {\n            console.log(error);\n        }\n    }\n\n    function DownloadProject(props) {\n        return (\n          <Modal\n            {...props}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n          >\n            <Modal.Body className=\"make-payment\">\n            <img className=\"big-image\" src={`${Port}/${mainPicture}`} alt='main-picture'></img>\n            <div className=\"row d-flex justify-content-center mt-4\">\n                <Button className=\"btn-green\">Download</Button>\n            </div>\n            </Modal.Body>\n          </Modal>\n        );\n      };\n\n     useEffect(() => {\n        fetchProjectDetail();\n    }, [])\n\n    return (\n        <div className=\"add-project\">\n            <Header />\n            <div className=\"container mt-4\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-10\">\n                        <div className=\"row\">\n                            <div className=\"col-7\">\n                                <img className=\"big-image\" src={`${Port}/${mainPicture}`} alt='main-picture' onClick={()=>setModalShow(true)}></img>\n                                <div className=\"row mt-4\">\n                                {\n                                    photos.map((photo)=>( \n                                        <div className=\"col-3 img-small-container\">\n                                            <img onClick={()=> setMainPicture(photo.image)} className=\"small-image\" src={`${Port}/${photo.image}`}>\n                                        </img></div>\n                                    ))\n                                }\n                                </div>\n                            </div>\n                            <div className=\"col-5\">\n                                <p>{description}</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <DownloadProject\n                show={modalShow}\n                onHide={() => setModalShow(false)}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default ViewProject\n","/home/septian/ReactJS/Final-Task/client/src/pages/Home/postsbyfollow.js",["224","225"],"import React, {useContext, useState, useEffect} from 'react';\nimport {AppContext} from '../../context/appContext';\nimport { useHistory} from 'react-router-dom';\nimport { API,Port } from \"../../config/api\";\nimport {Header} from '../../components';\n\nimport './home.css';\nconst PostsByFollow = () => {\n    const [state, dispatch ]= useContext(AppContext);\n    const {user} = state;\n    const [posts, setPosts ] = useState([]);\n    const router = useHistory();\n    const fetchPosts = async () => {\n        try {\n            const response = await API(`/postbyfollow/${user.id}`);\n            if (response.status === 500){\n                console.log(\"server error\")\n            }\n            console.log(response.data.data.postsbyfollow);\n            setPosts(response.data.data.postsbyfollow)\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    const detailPage = (id) => {\n        router.push(`/post-detail/${id}`);\n    }\n\n    useEffect(() => {\n        fetchPosts();\n    }, [])\n\n    return (\n        <div className=\"home\">\n            <Header/>\n            <div className=\"container mt-4\">\n            <div className=\"row\">\n                    <div className=\"col\">\n                        <select name='page' className=\"sorted\">\n                            <option value='followed'>Followed</option>\n                            <option value='all'>All Time</option>\n                        </select>\n                    </div>\n                </div>\n                <div className=\"row home-content\">\n                {\n                    posts.map((post) => (\n                        posts.length > 0 && post.users.posts.map((post) => (\n                            post.photos.map((photo)=>(\n                                <div className=\"col-3 img-post-wrapper\">\n                                    <img \n                                        className=\"post-image\" \n                                        src={`${Port}/${photo.image}`} \n                                        alt={photo.image}\n                                        onClick={()=>detailPage(post.id)}\n                                    ></img>\n                                </div>\n                            ))\n                        ))\n                    ))\n                }\n                </div>\n            </div>\n            \n        </div>\n    )\n}\n\nexport default PostsByFollow\n",{"ruleId":"226","replacedBy":"227"},{"ruleId":"228","replacedBy":"229"},{"ruleId":"230","severity":1,"message":"231","line":21,"column":12,"nodeType":"232","messageId":"233","endLine":21,"endColumn":17},{"ruleId":"234","severity":1,"message":"235","line":43,"column":8,"nodeType":"236","endLine":43,"endColumn":10,"suggestions":"237"},{"ruleId":"230","severity":1,"message":"231","line":10,"column":12,"nodeType":"232","messageId":"233","endLine":10,"endColumn":17},{"ruleId":"230","severity":1,"message":"238","line":89,"column":17,"nodeType":"232","messageId":"233","endLine":89,"endColumn":23},{"ruleId":"230","severity":1,"message":"239","line":105,"column":17,"nodeType":"232","messageId":"233","endLine":105,"endColumn":25},{"ruleId":"240","severity":1,"message":"241","line":125,"column":19,"nodeType":"242","endLine":125,"endColumn":76},{"ruleId":"240","severity":1,"message":"241","line":137,"column":19,"nodeType":"242","endLine":137,"endColumn":77},{"ruleId":"240","severity":1,"message":"241","line":142,"column":47,"nodeType":"242","endLine":142,"endColumn":78},{"ruleId":"240","severity":1,"message":"241","line":143,"column":55,"nodeType":"242","endLine":143,"endColumn":93},{"ruleId":"240","severity":1,"message":"241","line":144,"column":56,"nodeType":"242","endLine":144,"endColumn":95},{"ruleId":"243","severity":1,"message":"244","line":176,"column":97,"nodeType":"242","endLine":176,"endColumn":163},{"ruleId":"243","severity":1,"message":"244","line":217,"column":95,"nodeType":"242","endLine":217,"endColumn":161},{"ruleId":"230","severity":1,"message":"245","line":9,"column":19,"nodeType":"232","messageId":"233","endLine":9,"endColumn":27},{"ruleId":"234","severity":1,"message":"246","line":51,"column":8,"nodeType":"236","endLine":51,"endColumn":14,"suggestions":"247"},{"ruleId":"248","severity":1,"message":"249","line":78,"column":26,"nodeType":"250","messageId":"251","endLine":78,"endColumn":28},{"ruleId":"230","severity":1,"message":"231","line":6,"column":12,"nodeType":"232","messageId":"233","endLine":6,"endColumn":17},{"ruleId":"234","severity":1,"message":"252","line":15,"column":8,"nodeType":"236","endLine":15,"endColumn":10,"suggestions":"253"},{"ruleId":"230","severity":1,"message":"245","line":11,"column":19,"nodeType":"232","messageId":"233","endLine":11,"endColumn":27},{"ruleId":"230","severity":1,"message":"254","line":29,"column":19,"nodeType":"232","messageId":"233","endLine":29,"endColumn":33},{"ruleId":"230","severity":1,"message":"239","line":52,"column":19,"nodeType":"232","messageId":"233","endLine":52,"endColumn":27},{"ruleId":"230","severity":1,"message":"239","line":61,"column":19,"nodeType":"232","messageId":"233","endLine":61,"endColumn":27},{"ruleId":"234","severity":1,"message":"255","line":70,"column":7,"nodeType":"236","endLine":70,"endColumn":9,"suggestions":"256"},{"ruleId":"240","severity":1,"message":"241","line":84,"column":59,"nodeType":"242","endLine":84,"endColumn":118},{"ruleId":"240","severity":1,"message":"241","line":85,"column":41,"nodeType":"242","endLine":85,"endColumn":87},{"ruleId":"257","severity":1,"message":"258","line":116,"column":25,"nodeType":"242","endLine":116,"endColumn":102},{"ruleId":"240","severity":1,"message":"241","line":123,"column":33,"nodeType":"242","endLine":123,"endColumn":136},{"ruleId":"230","severity":1,"message":"259","line":2,"column":27,"nodeType":"232","messageId":"233","endLine":2,"endColumn":36},{"ruleId":"230","severity":1,"message":"245","line":13,"column":19,"nodeType":"232","messageId":"233","endLine":13,"endColumn":27},{"ruleId":"230","severity":1,"message":"239","line":61,"column":17,"nodeType":"232","messageId":"233","endLine":61,"endColumn":25},{"ruleId":"230","severity":1,"message":"245","line":13,"column":19,"nodeType":"232","messageId":"233","endLine":13,"endColumn":27},{"ruleId":"230","severity":1,"message":"239","line":37,"column":19,"nodeType":"232","messageId":"233","endLine":37,"endColumn":27},{"ruleId":"234","severity":1,"message":"260","line":52,"column":8,"nodeType":"236","endLine":52,"endColumn":10,"suggestions":"261"},{"ruleId":"230","severity":1,"message":"245","line":11,"column":19,"nodeType":"232","messageId":"233","endLine":11,"endColumn":27},{"ruleId":"234","severity":1,"message":"262","line":33,"column":8,"nodeType":"236","endLine":33,"endColumn":10,"suggestions":"263"},{"ruleId":"240","severity":1,"message":"241","line":59,"column":43,"nodeType":"242","endLine":59,"endColumn":65},{"ruleId":"230","severity":1,"message":"245","line":11,"column":19,"nodeType":"232","messageId":"233","endLine":11,"endColumn":27},{"ruleId":"243","severity":1,"message":"264","line":32,"column":9,"nodeType":"242","endLine":39,"endColumn":10},{"ruleId":"230","severity":1,"message":"265","line":49,"column":25,"nodeType":"232","messageId":"233","endLine":49,"endColumn":33},{"ruleId":"240","severity":1,"message":"241","line":58,"column":13,"nodeType":"242","endLine":58,"endColumn":64},{"ruleId":"240","severity":1,"message":"241","line":78,"column":69,"nodeType":"242","endLine":78,"endColumn":118},{"ruleId":"240","severity":1,"message":"241","line":79,"column":67,"nodeType":"242","endLine":79,"endColumn":114},{"ruleId":"240","severity":1,"message":"241","line":81,"column":68,"nodeType":"242","endLine":81,"endColumn":116},{"ruleId":"243","severity":1,"message":"264","line":15,"column":9,"nodeType":"242","endLine":22,"endColumn":10},{"ruleId":"240","severity":1,"message":"241","line":23,"column":9,"nodeType":"242","endLine":23,"endColumn":32},{"ruleId":"230","severity":1,"message":"265","line":29,"column":25,"nodeType":"232","messageId":"233","endLine":29,"endColumn":33},{"ruleId":"230","severity":1,"message":"239","line":16,"column":19,"nodeType":"232","messageId":"233","endLine":16,"endColumn":27},{"ruleId":"230","severity":1,"message":"245","line":13,"column":19,"nodeType":"232","messageId":"233","endLine":13,"endColumn":27},{"ruleId":"234","severity":1,"message":"266","line":45,"column":8,"nodeType":"236","endLine":45,"endColumn":10,"suggestions":"267"},{"ruleId":"240","severity":1,"message":"241","line":55,"column":38,"nodeType":"242","endLine":55,"endColumn":88},{"ruleId":"240","severity":1,"message":"241","line":56,"column":29,"nodeType":"242","endLine":56,"endColumn":75},{"ruleId":"240","severity":1,"message":"241","line":65,"column":51,"nodeType":"242","endLine":65,"endColumn":98},{"ruleId":"240","severity":1,"message":"241","line":77,"column":76,"nodeType":"242","endLine":77,"endColumn":100},{"ruleId":"240","severity":1,"message":"241","line":80,"column":69,"nodeType":"242","endLine":80,"endColumn":127},{"ruleId":"230","severity":1,"message":"245","line":10,"column":19,"nodeType":"232","messageId":"233","endLine":10,"endColumn":27},{"ruleId":"230","severity":1,"message":"254","line":29,"column":19,"nodeType":"232","messageId":"233","endLine":29,"endColumn":33},{"ruleId":"230","severity":1,"message":"239","line":55,"column":19,"nodeType":"232","messageId":"233","endLine":55,"endColumn":27},{"ruleId":"230","severity":1,"message":"239","line":64,"column":19,"nodeType":"232","messageId":"233","endLine":64,"endColumn":27},{"ruleId":"234","severity":1,"message":"268","line":73,"column":8,"nodeType":"236","endLine":73,"endColumn":10,"suggestions":"269"},{"ruleId":"240","severity":1,"message":"241","line":83,"column":38,"nodeType":"242","endLine":83,"endColumn":88},{"ruleId":"240","severity":1,"message":"241","line":84,"column":29,"nodeType":"242","endLine":84,"endColumn":75},{"ruleId":"240","severity":1,"message":"241","line":101,"column":51,"nodeType":"242","endLine":101,"endColumn":98},{"ruleId":"240","severity":1,"message":"241","line":113,"column":76,"nodeType":"242","endLine":113,"endColumn":100},{"ruleId":"240","severity":1,"message":"241","line":116,"column":69,"nodeType":"242","endLine":116,"endColumn":127},{"ruleId":"230","severity":1,"message":"245","line":12,"column":19,"nodeType":"232","messageId":"233","endLine":12,"endColumn":27},{"ruleId":"230","severity":1,"message":"239","line":49,"column":19,"nodeType":"232","messageId":"233","endLine":49,"endColumn":27},{"ruleId":"234","severity":1,"message":"270","line":62,"column":8,"nodeType":"236","endLine":62,"endColumn":10,"suggestions":"271"},{"ruleId":"230","severity":1,"message":"272","line":16,"column":18,"nodeType":"232","messageId":"233","endLine":16,"endColumn":25},{"ruleId":"230","severity":1,"message":"239","line":41,"column":19,"nodeType":"232","messageId":"233","endLine":41,"endColumn":27},{"ruleId":"234","severity":1,"message":"273","line":90,"column":10,"nodeType":"236","endLine":90,"endColumn":12,"suggestions":"274"},{"ruleId":"240","severity":1,"message":"241","line":132,"column":64,"nodeType":"242","endLine":132,"endColumn":142},{"ruleId":"230","severity":1,"message":"239","line":46,"column":19,"nodeType":"232","messageId":"233","endLine":46,"endColumn":27},{"ruleId":"234","severity":1,"message":"275","line":58,"column":8,"nodeType":"236","endLine":58,"endColumn":10,"suggestions":"276"},{"ruleId":"257","severity":1,"message":"258","line":40,"column":13,"nodeType":"242","endLine":40,"endColumn":90},{"ruleId":"234","severity":1,"message":"277","line":51,"column":8,"nodeType":"236","endLine":51,"endColumn":10,"suggestions":"278"},{"ruleId":"257","severity":1,"message":"258","line":61,"column":33,"nodeType":"242","endLine":61,"endColumn":143},{"ruleId":"240","severity":1,"message":"241","line":66,"column":45,"nodeType":"242","endLine":66,"endColumn":148},{"ruleId":"230","severity":1,"message":"245","line":9,"column":19,"nodeType":"232","messageId":"233","endLine":9,"endColumn":27},{"ruleId":"234","severity":1,"message":"279","line":32,"column":8,"nodeType":"236","endLine":32,"endColumn":10,"suggestions":"280"},"no-native-reassign",["281"],"no-negated-in-lhs",["282"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadUser'. Either include it or remove the dependency array.","ArrayExpression",["283"],"'userId' is assigned a value but never used.","'response' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'dispatch' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchPostsByFollow'. Either include it or remove the dependency array.",["284"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'dispatch' and 'isLogout'. Either include them or remove the dependency array.",["285"],"'responseLength' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchPostDetail'. Either include it or remove the dependency array.",["286"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'useEffect' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchOrders'. Either include it or remove the dependency array.",["287"],"React Hook useEffect has a missing dependency: 'fetchOffers'. Either include it or remove the dependency array.",["288"],"The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'setValue' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchProfile'. Either include it or remove the dependency array.",["289"],"React Hook useEffect has a missing dependency: 'fetchUser'. Either include it or remove the dependency array.",["290"],"React Hook useEffect has a missing dependency: 'user.id'. Either include it or remove the dependency array.",["291"],"'setArts' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'user.greeting', 'user.id', and 'user.name'. Either include them or remove the dependency array.",["292"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["293"],"React Hook useEffect has a missing dependency: 'fetchProjectDetail'. Either include it or remove the dependency array.",["294"],"React Hook useEffect has a missing dependency: 'fetchPosts'. Either include it or remove the dependency array.",["295"],"no-global-assign","no-unsafe-negation",{"desc":"296","fix":"297"},{"desc":"298","fix":"299"},{"desc":"300","fix":"301"},{"desc":"302","fix":"303"},{"desc":"304","fix":"305"},{"desc":"306","fix":"307"},{"desc":"308","fix":"309"},{"desc":"310","fix":"311"},{"desc":"312","fix":"313"},{"desc":"314","fix":"315"},{"desc":"316","fix":"317"},{"desc":"318","fix":"319"},{"desc":"320","fix":"321"},"Update the dependencies array to be: [loadUser]",{"range":"322","text":"323"},"Update the dependencies array to be: [fetchPostsByFollow, page]",{"range":"324","text":"325"},"Update the dependencies array to be: [dispatch, isLogout]",{"range":"326","text":"327"},"Update the dependencies array to be: [fetchPostDetail]",{"range":"328","text":"329"},"Update the dependencies array to be: [fetchOrders]",{"range":"330","text":"331"},"Update the dependencies array to be: [fetchOffers]",{"range":"332","text":"333"},"Update the dependencies array to be: [fetchProfile]",{"range":"334","text":"335"},"Update the dependencies array to be: [fetchUser]",{"range":"336","text":"337"},"Update the dependencies array to be: [user.id]",{"range":"338","text":"339"},"Update the dependencies array to be: [user.greeting, user.id, user.name]",{"range":"340","text":"341"},"Update the dependencies array to be: [id]",{"range":"342","text":"343"},"Update the dependencies array to be: [fetchProjectDetail]",{"range":"344","text":"345"},"Update the dependencies array to be: [fetchPosts]",{"range":"346","text":"347"},[1114,1116],"[loadUser]",[1497,1503],"[fetchPostsByFollow, page]",[444,446],"[dispatch, isLogout]",[2260,2262],"[fetchPostDetail]",[1549,1551],"[fetchOrders]",[957,959],"[fetchOffers]",[1531,1533],"[fetchProfile]",[2369,2371],"[fetchUser]",[2054,2056],"[user.id]",[2692,2694],"[user.greeting, user.id, user.name]",[2006,2008],"[id]",[1719,1721],"[fetchProjectDetail]",[999,1001],"[fetchPosts]"]